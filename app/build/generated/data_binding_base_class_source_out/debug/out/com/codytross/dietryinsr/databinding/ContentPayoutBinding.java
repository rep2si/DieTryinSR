// Generated by view binder compiler. Do not edit!
package com.codytross.dietryinsr.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.constraint.ConstraintLayout;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.TextView;
import com.codytross.dietryinsr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ContentPayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView gessExplanation;

  @NonNull
  public final TextView grandTotal;

  @NonNull
  public final TextView grandTotalLabel;

  @NonNull
  public final TextView nExpectationsSuccessful;

  @NonNull
  public final TextView nExpectationsSuccessfulLabel;

  @NonNull
  public final TextView nExpectationsTested;

  @NonNull
  public final TextView nExpectationsTestedLabel;

  @NonNull
  public final TextView nKept;

  @NonNull
  public final TextView nKeptLabel;

  @NonNull
  public final TextView nReceived;

  @NonNull
  public final TextView nReceivedLabel;

  @NonNull
  public final TextView totReceived;

  @NonNull
  public final TextView totReceivedLabel;

  @NonNull
  public final TextView totalAccurateGuesses;

  @NonNull
  public final TextView totalAccurateGuessesLabel;

  @NonNull
  public final TextView totalKept;

  @NonNull
  public final TextView totalKeptLabel;

  private ContentPayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView gessExplanation, @NonNull TextView grandTotal,
      @NonNull TextView grandTotalLabel, @NonNull TextView nExpectationsSuccessful,
      @NonNull TextView nExpectationsSuccessfulLabel, @NonNull TextView nExpectationsTested,
      @NonNull TextView nExpectationsTestedLabel, @NonNull TextView nKept,
      @NonNull TextView nKeptLabel, @NonNull TextView nReceived, @NonNull TextView nReceivedLabel,
      @NonNull TextView totReceived, @NonNull TextView totReceivedLabel,
      @NonNull TextView totalAccurateGuesses, @NonNull TextView totalAccurateGuessesLabel,
      @NonNull TextView totalKept, @NonNull TextView totalKeptLabel) {
    this.rootView = rootView;
    this.gessExplanation = gessExplanation;
    this.grandTotal = grandTotal;
    this.grandTotalLabel = grandTotalLabel;
    this.nExpectationsSuccessful = nExpectationsSuccessful;
    this.nExpectationsSuccessfulLabel = nExpectationsSuccessfulLabel;
    this.nExpectationsTested = nExpectationsTested;
    this.nExpectationsTestedLabel = nExpectationsTestedLabel;
    this.nKept = nKept;
    this.nKeptLabel = nKeptLabel;
    this.nReceived = nReceived;
    this.nReceivedLabel = nReceivedLabel;
    this.totReceived = totReceived;
    this.totReceivedLabel = totReceivedLabel;
    this.totalAccurateGuesses = totalAccurateGuesses;
    this.totalAccurateGuessesLabel = totalAccurateGuessesLabel;
    this.totalKept = totalKept;
    this.totalKeptLabel = totalKeptLabel;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentPayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentPayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_payout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentPayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.gess_explanation;
      TextView gessExplanation = ViewBindings.findChildViewById(rootView, id);
      if (gessExplanation == null) {
        break missingId;
      }

      id = R.id.grand_total;
      TextView grandTotal = ViewBindings.findChildViewById(rootView, id);
      if (grandTotal == null) {
        break missingId;
      }

      id = R.id.grand_total_label;
      TextView grandTotalLabel = ViewBindings.findChildViewById(rootView, id);
      if (grandTotalLabel == null) {
        break missingId;
      }

      id = R.id.n_expectations_successful;
      TextView nExpectationsSuccessful = ViewBindings.findChildViewById(rootView, id);
      if (nExpectationsSuccessful == null) {
        break missingId;
      }

      id = R.id.n_expectations_successful_label;
      TextView nExpectationsSuccessfulLabel = ViewBindings.findChildViewById(rootView, id);
      if (nExpectationsSuccessfulLabel == null) {
        break missingId;
      }

      id = R.id.n_expectations_tested;
      TextView nExpectationsTested = ViewBindings.findChildViewById(rootView, id);
      if (nExpectationsTested == null) {
        break missingId;
      }

      id = R.id.n_expectations_tested_label;
      TextView nExpectationsTestedLabel = ViewBindings.findChildViewById(rootView, id);
      if (nExpectationsTestedLabel == null) {
        break missingId;
      }

      id = R.id.n_kept;
      TextView nKept = ViewBindings.findChildViewById(rootView, id);
      if (nKept == null) {
        break missingId;
      }

      id = R.id.n_kept_label;
      TextView nKeptLabel = ViewBindings.findChildViewById(rootView, id);
      if (nKeptLabel == null) {
        break missingId;
      }

      id = R.id.n_received;
      TextView nReceived = ViewBindings.findChildViewById(rootView, id);
      if (nReceived == null) {
        break missingId;
      }

      id = R.id.n_received_label;
      TextView nReceivedLabel = ViewBindings.findChildViewById(rootView, id);
      if (nReceivedLabel == null) {
        break missingId;
      }

      id = R.id.tot_received;
      TextView totReceived = ViewBindings.findChildViewById(rootView, id);
      if (totReceived == null) {
        break missingId;
      }

      id = R.id.tot_received_label;
      TextView totReceivedLabel = ViewBindings.findChildViewById(rootView, id);
      if (totReceivedLabel == null) {
        break missingId;
      }

      id = R.id.total_accurate_guesses;
      TextView totalAccurateGuesses = ViewBindings.findChildViewById(rootView, id);
      if (totalAccurateGuesses == null) {
        break missingId;
      }

      id = R.id.total_accurate_guesses_label;
      TextView totalAccurateGuessesLabel = ViewBindings.findChildViewById(rootView, id);
      if (totalAccurateGuessesLabel == null) {
        break missingId;
      }

      id = R.id.total_kept;
      TextView totalKept = ViewBindings.findChildViewById(rootView, id);
      if (totalKept == null) {
        break missingId;
      }

      id = R.id.total_kept_label;
      TextView totalKeptLabel = ViewBindings.findChildViewById(rootView, id);
      if (totalKeptLabel == null) {
        break missingId;
      }

      return new ContentPayoutBinding((ConstraintLayout) rootView, gessExplanation, grandTotal,
          grandTotalLabel, nExpectationsSuccessful, nExpectationsSuccessfulLabel,
          nExpectationsTested, nExpectationsTestedLabel, nKept, nKeptLabel, nReceived,
          nReceivedLabel, totReceived, totReceivedLabel, totalAccurateGuesses,
          totalAccurateGuessesLabel, totalKept, totalKeptLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
