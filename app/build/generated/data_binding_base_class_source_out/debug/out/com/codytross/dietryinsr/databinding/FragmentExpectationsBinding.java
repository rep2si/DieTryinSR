// Generated by view binder compiler. Do not edit!
package com.codytross.dietryinsr.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.design.widget.TextInputEditText;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.FrameLayout;
import android.widget.TextView;
import com.codytross.dietryinsr.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentExpectationsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final TextInputEditText expected;

  @NonNull
  public final TextView expectedLabel;

  @NonNull
  public final TextView received;

  @NonNull
  public final TextView receivedLabel;

  private FragmentExpectationsBinding(@NonNull FrameLayout rootView,
      @NonNull TextInputEditText expected, @NonNull TextView expectedLabel,
      @NonNull TextView received, @NonNull TextView receivedLabel) {
    this.rootView = rootView;
    this.expected = expected;
    this.expectedLabel = expectedLabel;
    this.received = received;
    this.receivedLabel = receivedLabel;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentExpectationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentExpectationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_expectations, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentExpectationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.expected;
      TextInputEditText expected = ViewBindings.findChildViewById(rootView, id);
      if (expected == null) {
        break missingId;
      }

      id = R.id.expected_label;
      TextView expectedLabel = ViewBindings.findChildViewById(rootView, id);
      if (expectedLabel == null) {
        break missingId;
      }

      id = R.id.received;
      TextView received = ViewBindings.findChildViewById(rootView, id);
      if (received == null) {
        break missingId;
      }

      id = R.id.received_label;
      TextView receivedLabel = ViewBindings.findChildViewById(rootView, id);
      if (receivedLabel == null) {
        break missingId;
      }

      return new FragmentExpectationsBinding((FrameLayout) rootView, expected, expectedLabel,
          received, receivedLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
